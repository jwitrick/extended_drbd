require 'chefspec'

describe 'extended_drbd::default' do
  let(:recipe) { 'extended_drbd::default' }
  let(:server_name) { "test1" }
  let(:server_ip) { "192.168.1.1" }
  let(:partner_name) { "test2" }
  let(:partner_ip) { "192.168.1.2" }
  @supported_versions = ['6.3', '5.8']

  shared_examples_for 'extended_drbd' do

#    it 'should log a message with with the drbd resource' do
#      puts chef_run.node['fqdn']
#      expect(chef_run).to log "Creating template with disk resource /dev/drbd0"
#    end

  end

  describe  "In place settings, using default attrs" do
    let(:chef_run_el6) {
      runner = ChefSpec::ChefRunner.new(platform: 'redhat', version: '6.3') do |node|
        node.automatic_attrs['fqdn'] = server_name
        node.automatic_attrs['ipaddress'] = server_ip

        #For some reason if other cookbooks that change this value
        #are within the same cookbook root level then there atts values
        #override the default one
        node.normal['drbd']['resource'] = "data"
        node.normal['drbd']['server']['hostname'] = server_name
        node.normal['drbd']['server']['ipaddress'] = server_ip
        node.normal['drbd']['partner']['ipaddress'] = partner_ip
        node.normal['drbd']['partner']['hostname'] = partner_name
      end
      File.stub(:exists?).and_call_original
      File.stub(:exists?).with('/etc/drbd.conf').and_return(true)
      runner.converge recipe
      runner
    }

    it_should_behave_like 'extended_drbd'

    it 'should create file "/etc/drbd.conf"' do
      %w{ chef_run_el6 }.each do |platform|
        expect(platform.node['drbd']['stop_file']).to eql("/etc/drbd_stop_file")
      end
      expect(chef_run.node['drbd']['stop_file']).to eql("/etc/drbd_stop_file")
      expect(chef_run).to create_file_with_content '/etc/drbd.conf',
        /^# Generated by Chef for (\w*)$/
      expect(chef_run).to create_file_with_content "/etc/drbd.conf",
        "resource data" 
      expect(chef_run).to create_file_with_content "/etc/drbd.conf",
        "device    /dev/drbd0;"
      expect(chef_run).to create_file_with_content "/etc/drbd.conf",
        "disk      /dev/local/data;"
      expect(chef_run).to create_file_with_content "/etc/drbd.conf",
        "address   #{server_ip}:7789"
      expect(chef_run).to create_file_with_content "/etc/drbd.conf",
        "address   #{partner_ip}:7789"
      expect(chef_run).to create_file_with_content "/etc/drbd.conf",
        "protocol C;"
      expect(chef_run).to create_file_with_content "/etc/drbd.conf",
        "rate 36M"
      expect(chef_run).to create_file_with_content "/etc/drbd.conf",
        "on-io-error detach"
    end
    
  end
    
    
end
